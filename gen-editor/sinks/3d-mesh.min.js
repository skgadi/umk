function clearData(){fullData=[],reactTheChart()}function appendData(t){if(!fullData.length&&t.length){settings.noOfPlots=0;for(let e=0;e<t[0].v[0].r.length;e++)for(let l=0;l<t[0].v[0].r[0].length;l++)["","Img"].forEach(function(t){fullData.push({type:"mesh3d",name:t+"("+e+","+l+")",visible:!settings.showIm&&settings.noOfPlots%2?"legendonly":"true",x:[],y:[],z:[],opacity:1,colorscale:settings.colorscale,reversescale:settings.reversescale,intensity:[],intensitymode:"cell",showscale:!1,showlegend:!0,contour:{width:settings.width}}),settings.noOfPlots++});for(let t=0;t<settings.noOfPlots;t++);}for(let e=0;e<t.length;e++){let l=0;for(let a=0;a<t[e].v[0].r.length;a++)for(let o=0;o<t[e].v[0].r[0].length;o++)fullData[l].x.push(Number(t[e].v[0].r[a][o])),fullData[l].y.push(Number(t[e].v[1].r[a][o])),fullData[l].z.push(Number(t[e].v[2].r[a][o])),fullData[l].intensity.push(Number(t[e].v[3].r[a][o])),l++,fullData[l].x.push(Number(t[e].v[0].i[a][o])),fullData[l].y.push(Number(t[e].v[1].i[a][o])),fullData[l].z.push(Number(t[e].v[2].i[a][o])),fullData[l].intensity.push(Number(t[e].v[3].i[a][o])),l++}fullData=fullData.slice(-settings.limitData),reactTheChart()}function updateConfiguration(){for(let t=0;t<fullData.length;t++){const e=fullData[t];e.contour.width=settings.width,e.visible=!settings.showIm&&t%2?"legendonly":"true",e.reversescale=settings.reversescale,e.colorscale=settings.colorscale}console.log("updated configuration"),reactTheChart()}function reactTheChart(){Plotly.react("chart",fullData,settings.chartLayout)}function updateColors(){document.getElementsByTagName("html")[0].className=settings.mSettings.theme,settings.chartLayout.plot_bgcolor=window.getComputedStyle(document.getElementById("css-ref-ele-0"),null).getPropertyValue("background-color"),settings.chartLayout.paper_bgcolor=window.getComputedStyle(document.getElementById("css-ref-ele-0"),null).getPropertyValue("background-color"),settings.chartLayout.font.color=window.getComputedStyle(document.getElementById("css-ref-ele-0"),null).getPropertyValue("color"),["xaxis","yaxis","zaxis"].forEach(function(t){settings.chartLayout.scene[t].tickcolor=window.getComputedStyle(document.getElementById("css-ref-ele-0"),null).getPropertyValue("color"),settings.chartLayout.scene[t].gridcolor=window.getComputedStyle(document.getElementById("css-ref-ele-0"),null).getPropertyValue("border-color"),settings.chartLayout.scene[t].zerolinecolor=window.getComputedStyle(document.getElementById("css-ref-ele-0"),null).getPropertyValue("color")}),reactTheChart()}const settings={width:5,reversescale:!1,mode:"lines",showIm:!1,limitData:1e3,mSettings:{},colorscale:"jet",noOfPlots:1,chartLayout:{paper_bgcolor:"#ffffff00",plot_bgcolor:"#ffffff00",font:{color:"#000"},scene:{xaxis:{tickcolor:"#000",gridcolor:"#888",zerolinecolor:"#000"},yaxis:{tickcolor:"#000",gridcolor:"#888",zerolinecolor:"#000"},zaxis:{tickcolor:"#000",gridcolor:"#888",zerolinecolor:"#000"}},margin:{l:0,r:0,b:0,t:0},legend:{y:.5}},chartConfig:{displaylogo:!1,toImageButtonOptions:{filename:"umk_3D_line_chart"},responsive:!0}};let fullData=[];Plotly.newPlot("chart",fullData,settings.chartLayout,settings.chartConfig),onmessage=function(t){console.log(t.data),t.data.d&&appendData(t.data.d),t.data.r&&clearData(),t.data.c&&(console.log("sdfsdf"),settings.width=JSON.parse(t.data.c.Parameters.width.Value)[0][0],settings.reversescale=!!t.data.c.Parameters.reversescale.Value[0][0],settings.showIm=!!t.data.c.Parameters.showIm.Value[0][0],settings.colorscale=t.data.c.Parameters.colorscale.Value[0][0],settings.limitData=JSON.parse(t.data.c.Parameters.limitData.Value)[0][0],updateConfiguration()),t.data.s&&(settings.mSettings=t.data.s,updateColors())};